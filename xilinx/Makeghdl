#!/usr/bin/make

ISE=/opt/Xilinx/ise
TASK=imp

all: ghdl

#
# Collecting VHDL files
#

VHDLS  = $(shell find examples/ -type f -name '*.vhd')

# Filtering duplicated Files
## find -name '*.vhd' -type f -printf '%p %f\n' | sort -t ' ' -k 2,2 | uniq -f 1 --all-repeated=separate | cut -d' ' -f1
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/AddrDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DataDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/black_box/black_box_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/rams/bytewrite_ram_1b.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/concurrent_conditional_assignment.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/concurrent_selected_assignment.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dynamic_shift_registers/dynamic_shift_registers_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_explicitopen.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_implicitopen.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/for_generate.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/for_loop.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/functions_procedures/function_package_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/generics/generics_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/if_for_generate.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/initial/initial_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/instantiation/instantiation_recursive.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/instantiation/instantiation_simple.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/functions_procedures/procedure_package_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/registers/registers_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/shift_registers/shift_registers_0.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/shift_registers/shift_registers_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/signals_variables/signal_in_process.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_2.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_3.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/signals_variables/variable_in_process.vhd
# Filtering testbenches
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/EvenSymSystFIR_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestImpulsePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestSinePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/OddSymSystFIR_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestImpulsePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestSinePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/PolyDecFilter_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/PolyIntrpFilter_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/TestPkg.vhd
# Filtering included components
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymTranspConvFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymTranspConvFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/FilterStage.vhd

VHDLS := $(filter-out $(VHDLS_TO_FILTER), $(VHDLS))

NO_OF_VHDLS = $(words $(VHDLS))

#
# Docker
#

DOCKER_CMD = $(command -v winpty) docker run --rm -it -v /$(CURDIR)/..://wrk -w //wrk/xilinx ghdl/synth:beta

#
# ghdl analysis
#

GHDL_EXTRA = \
-fsynopsys -fexplicit -frelaxed --warn-no-hide --warn-no-shared --warn-no-library -Ptemp/ghdl --std=08 --workdir=temp/ghdl

ghdl:
	@mkdir -p temp/ghdl
	@echo "Analysing $(NO_OF_VHDLS) files with ghdl"
	@$(DOCKER_CMD) ghdl -a --work=unisim $(GHDL_EXTRA) support/blackboxes.vhd
	@$(foreach FILE, $(VHDLS), \
		echo "* $(FILE)"; \
		$(DOCKER_CMD) ghdl -a $(GHDL_EXTRA) $(FILE); \
	)
	@echo "DONE"

#
# ghdl-yosys-plugin
#

gosys:
	@mkdir -p temp/$@ reports/$@
	@echo "Analysing $(NO_OF_VHDLS) files with ghdl-yosys-plugin"
	@$(foreach FILE, $(VHDLS), \
		echo "* $(FILE)"; \
		$(DOCKER_CMD) python3 ../helpers/gosys.py -o temp/gosys $(FILE)  > \
		$(addprefix reports/$@/, $(addsuffix .txt, $(notdir $(basename $(FILE))))); \
	)
	@echo "DONE"
