#!/usr/bin/make

#
# Collecting VHDL files
#

VHDLS  = $(shell find examples/ -type f -name '*.vhd' | sort)

# Filtering duplicated Files
## find -name '*.vhd' -type f -printf '%p %f\n' | sort -t ' ' -k 2,2 | uniq -f 1 --all-repeated=separate | cut -d' ' -f1
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/black_box/black_box_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/AddrDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DataDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dynamic_shift_registers/dynamic_shift_registers_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/rams/bytewrite_ram_1b.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/registers/registers_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/shift_registers/shift_registers_0.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/shift_registers/shift_registers_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_1.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_2.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/tristates/tristates_3.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/concurrent_conditional_assignment.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/concurrent_selected_assignment.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_explicitopen.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_implicitopen.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/for_generate.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/for_loop.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/functions_procedures/function_package_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/generics/generics_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/combinatorial/if_for_generate.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/initial/initial_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/instantiation/instantiation_recursive.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/instantiation/instantiation_simple.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/functions_procedures/procedure_package_1.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/signals_variables/signal_in_process.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/signals_variables/variable_in_process.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_explicitopen.vhd
VHDLS_TO_FILTER += examples/ise/VHDL_Language_Support/file_type_support/filewrite_implicitopen.vhd
# Filtering testbenches
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/EvenSymSystFIR_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestImpulsePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/TestSinePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/OddSymSystFIR_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestImpulsePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/TestSinePkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/PolyDecFilter_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/TestPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/PolyIntrpFilter_tb.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/TestPkg.vhd
# Filtering packages
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/PolyDecFilterPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/PolyIntrpFilterPkg.vhd
# Filtering included components
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymTranspConvFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymSystFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/EvenSymTranspConvFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymSystFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/CoefRom.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DataDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/CoefRom.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/DataDelay.vhd
# Some descriptions of two complex design, where instantiated modules whith same name but
# slightly different ports than others, were used.
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/PolyDecFilterPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyDecFilter/PolyDecFilter.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/AddrDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/AddrGen.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/CoefRom.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DataDelay.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/DelayLine.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/FilterStage.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/PolyIntrpFilterPkg.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/PolyIntrpFilter.vhd
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/dsp/PolyIntrpFilter/SyncDelay.vhd
# Not synthesizable
VHDLS_TO_FILTER += examples/ise/HDL_Coding_Techniques/rams/ram_protected_sharedvar.vhd
# Can't be implemented and unuseful for synthesis
VHDLS_TO_FILTER += examples/vivado/black_box_1.vhd


VHDLS := $(filter-out $(VHDLS_TO_FILTER), $(VHDLS))

NO_OF_VHDLS = $(words $(VHDLS))

#
# Docker
#

DOCKER_CMD = $(command -v winpty) docker run --rm -it -v /$(CURDIR)/..://wrk -w //wrk/xilinx ghdl/synth:beta

#
# ghdl analysis
#

GHDL_FLAGS = \
-fsynopsys -fexplicit -frelaxed \
--warn-no-hide --warn-no-shared --warn-no-library \
-Ptemp/ghdl --std=08 --workdir=temp/ghdl

GETCOMP = python3 ../helpers/getcomp.py

verify-vhdl:
	@mkdir -p temp/ghdl
	@$(DOCKER_CMD) ghdl -a --work=unisim $(GHDL_FLAGS) support/blackboxes.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd
	@echo "Checking the syntax of $(NO_OF_VHDLS) files with ghdl"
	@$(foreach FILE, $(VHDLS), \
		echo "* $(FILE)"; \
		$(DOCKER_CMD) ghdl -s $(GHDL_FLAGS) $(FILE); \
	)
	@echo "DONE"

# Filtering Files with GHDL synthesis complains
## ERROR: latch infered for net
TO_FILTER_IN_GHDL  = examples/vivado/latches.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/latches/latches_cp.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/latches/latches_0.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/latches/latches_1.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/latches/latches_2.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/latches/latches_3.vhd
TO_FILTER_IN_GHDL += examples/ise/HDL_Coding_Techniques/multiplexers/multiplexers_4.vhd
# Filtering files with write operations
TO_FILTER_IN_GHDL += examples/vivado/filewrite_explicitopen.vhd
TO_FILTER_IN_GHDL += examples/vivado/filewrite_implicitopen.vhd


VHDLS_FOR_GHDL = $(filter-out $(TO_FILTER_IN_GHDL), $(VHDLS))

NO_OF_VHDLS_FOR_GHDL = $(words $(VHDLS_FOR_GHDL))

ghdl:
	@mkdir -p temp/ghdl reports/$@
	@$(DOCKER_CMD) ghdl -a --work=unisim $(GHDL_FLAGS) support/blackboxes.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd
	@echo "Analysing $(NO_OF_VHDLS_FOR_GHDL) files with ghdl --synth"
	@$(foreach FILE, $(VHDLS_FOR_GHDL), \
		echo "* $(FILE)"; \
		echo "  * Analysis"; \
		$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) $(FILE); \
		echo "  * Synthesis"; \
		$(DOCKER_CMD) ghdl --synth $(GHDL_FLAGS) $(shell $(GETCOMP) $(FILE)) > \
		$(addprefix reports/$@/, $(addsuffix .txt, $(notdir $(basename $(FILE))))); \
	)
	@echo "DONE"

ghdl-yosys:
	@mkdir -p temp/ghdl reports/$@
	@$(DOCKER_CMD) ghdl -a --work=unisim $(GHDL_FLAGS) support/blackboxes.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd
	@$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd
	@echo "Analysing $(NO_OF_VHDLS_FOR_GHDL) files with ghdl-yosys-plugin"
	@$(foreach FILE, $(VHDLS_FOR_GHDL), \
		echo "* $(FILE)"; \
		echo "  * Analysis"; \
		$(DOCKER_CMD) ghdl -a $(GHDL_FLAGS) $(FILE); \
		echo "  * Elaboration"; \
		$(DOCKER_CMD) yosys -Q -m ghdl -p 'ghdl $(GHDL_FLAGS) $(shell $(GETCOMP) $(FILE)); synth_xilinx -family xc7; write_edif -pvector bra yosys.edif' > \
		$(addprefix reports/$@/, $(addsuffix .txt, $(notdir $(basename $(FILE))))); \
	)
	@echo "DONE"

#
# Synthesis with Xilinx tools
#

# Filtering Files with ISE complains
## Shared variable needed
TO_FILTER_IN_ISE  = examples/vivado/asym_ram_tdp_read_first.vhd
TO_FILTER_IN_ISE += examples/vivado/asym_ram_tdp_write_first.vhd
TO_FILTER_IN_ISE += examples/ise/HDL_Coding_Techniques/rams/rams_16a.vhd
## The INIT value is specified with an attribute, which is rejected by XST
TO_FILTER_IN_ISE += examples/ise/FPGA_Optimization/primitive_support/primitive_1.vhd
## Needs VHDL 2008 (unsupported)
TO_FILTER_IN_ISE += examples/vivado/rams_sp_3d.vhd
TO_FILTER_IN_ISE += examples/vivado/rams_sdp_3d.vhd
## RAM using records seems unsupported
TO_FILTER_IN_ISE += examples/vivado/rams_tdp_record.vhd

VHDLS_FOR_ISE = $(filter-out $(TO_FILTER_IN_ISE), $(VHDLS))

NO_OF_VHDLS_FOR_ISE = $(words $(VHDLS_FOR_ISE))


GENERAL_DEPS = \
-f support/blackboxes.vhd \
-f examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/DelayLine.vhd \
-f examples/ise/HDL_Coding_Techniques/dsp/OddSymTranspConvFIR/FilterStage.vhd

ise-vhdl:
	mkdir -p reports/$@
	@echo "Analysing $(NO_OF_VHDLS_FOR_ISE) files with $@"
	@$(foreach FILE, $(VHDLS_FOR_ISE), \
		echo "* Analizyng $(FILE)"; \
		fpga-hdl2bit --outdir temp/$@ --tool ise --run $(TASK) $(GENERAL_DEPS) $(FILE) > \
		$(addprefix reports/$@/, $(addsuffix .txt, $(notdir $(basename $(FILE))))); \
	)
	@echo "DONE"

# Filtering Files with Vivado complains
## Unsupported Asymmetric RAM pattern
TO_FILTER_IN_VIVADO  = examples/ise/HDL_Coding_Techniques/rams/asymmetric_ram_2d.vhd
## illegal syntax for subtype indication
TO_FILTER_IN_VIVADO += examples/vivado/rams_sp_3d.vhd
TO_FILTER_IN_VIVADO += examples/vivado/rams_sdp_3d.vhd


VHDLS_FOR_VIVADO  = $(filter-out $(TO_FILTER_IN_VIVADO), $(VHDLS))

NO_OF_VHDLS_FOR_VIVADO = $(words $(VHDLS_FOR_VIVADO))

vivado-vhdl:
	mkdir -p reports/$@
	@echo "Analysing $(NO_OF_VHDLS_FOR_VIVADO) files with $@"
	@$(foreach FILE, $(VHDLS_FOR_VIVADO), \
		echo "* Analizyng $(FILE)"; \
		fpga-hdl2bit --outdir temp/$@ --tool vivado --run $(TASK) $(GENERAL_DEPS) $(FILE) > \
		$(addprefix reports/$@/, $(addsuffix .txt, $(notdir $(basename $(FILE))))); \
	)
	@echo "DONE"
